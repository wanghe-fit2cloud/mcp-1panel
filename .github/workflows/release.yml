name: Build and Draft Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. v1.0.0)"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: ppc64le

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Build binary
        run: |
          mkdir -p build
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${{ matrix.goarm }} go build -trimpath -ldflags '-s -w' -o ./build/mcp-1panel-${{ matrix.goarch }}v${{ matrix.goarm }} ./main.go
          else
            CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags '-s -w' -o ./build/mcp-1panel-${{ matrix.goarch }} ./main.go
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./release-assets

      - name: Create Release Draft
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          draft: true
          files: ./release-assets/*
